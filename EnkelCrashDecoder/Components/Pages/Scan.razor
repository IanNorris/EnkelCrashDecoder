@page "/Scan/{sessionId}"
@rendermode InteractiveServer
@implements IAsyncDisposable
@inject IJSRuntime JS
@inject NavigationManager NavMan
@inject SessionService SS

<div id="video-container" style="width:100%; height: 100%">
    <video id="qr-video" @ref="_video" style="width:100%; height: 100%"></video>
</div>

@code {
    protected override void OnInitialized()
    {
        _objRef = DotNetObjectReference.Create(this);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _qrScannerModule = await JS.InvokeAsync<IJSObjectReference>("import", "./camera.js");
            _qrScanner = await _qrScannerModule.InvokeAsync<IJSObjectReference>("QrScannerCamera.init", new object[] { _objRef });
        }
    }

    [JSInvokable]
    public async Task OnScan(string qrString)
    {
        if (!string.IsNullOrEmpty(qrString))
        {
            var qrContent = QRDecoder.GetContent(qrString);

            if(qrContent != null)
            {
                await _qrScanner.InvokeVoidAsync("stop");

                SS.InsertScan(sessionId, qrContent);

                NavMan.NavigateTo($"/Session/{sessionId}");
            }
        }
    }

    [JSInvokable]
    public void OnError(string result)
    {
        if (result != null)
        {
            Console.WriteLine(result);
        }
    }

    async Task StartScanning()
    {
        if (_qrScanner != null)
        {
            await _qrScanner.InvokeVoidAsync("start");
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (_qrScannerModule != null)
        {
            await _qrScannerModule.DisposeAsync();
        }

        if (_qrScanner != null)
        {
            await _qrScanner.DisposeAsync();
        }

        _objRef?.Dispose();
    }

    [Parameter]
    public string sessionId { get; set; }

    private ElementReference _video;
    private DotNetObjectReference<Scan> _objRef;
    private IJSObjectReference _qrScannerModule;
    private IJSObjectReference _qrScanner;
}
